name: Continuous Deployment
on:
  push:
    branches: # Run only on main branch
      - 'main'
      - 'action-cd'
jobs:
  test_and_build_code:
    name: Test and Build Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Environment Setup
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          cache: pip

      - name: Cache dependecies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/dev-requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Install packages
        run: |
          pip install -U pip
          pip install -r dev-requirements.txt

      - name: Run Linter
        run: flake8 src/

      - name: Run Type-Checker
        run: mypy --install-types --non-interactive src/

      - name: Run Unit Tests
        run: pytest -vs

      - name: Build Artifact
        run: |
          pip install -U wheel setuptools
          python setup.py sdist bdist_wheel

      - name: Archive Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dist-wine-predictor
          path: |
            dist


  deploy_artifact:
    name: Deploy artifact on Target Server
    needs: test_and_build_code
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist-wine-predictor

      - name: Display structure of downloaded files
        run: ls -R

      - name: Push Artifact to Staging server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}

      - name: Deploy to Staging server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sh ${{ secrets.REMOTE_DEPLOY_SCRIPT }}